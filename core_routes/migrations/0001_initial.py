# Generated by Django 4.1.7 on 2023-06-23 16:38

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergenes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Avoir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50)),
                ('date_created', models.DateField(default=datetime.date.today, validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date(2023, 6, 23), message='Date can not be later than today')])),
                ('date_received', models.DateField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date(2023, 6, 23), message='Date can not be later than today')])),
                ('total_amount_ht', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
            ],
        ),
        migrations.CreateModel(
            name='BonLivraison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50)),
                ('date_created', models.DateField(default=datetime.date.today, validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date(2023, 6, 23), message='Date can not be later than today')])),
                ('total_amount_ht', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
            ],
        ),
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('last_order_time', models.CharField(blank=True, max_length=20)),
                ('address', models.CharField(blank=True, max_length=250)),
                ('address_line_2', models.CharField(blank=True, max_length=250)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('city', models.CharField(blank=True, max_length=150)),
                ('department', models.CharField(blank=True, max_length=150)),
                ('country', models.CharField(blank=True, max_length=150)),
                ('client_code', models.CharField(blank=True, max_length=100)),
                ('principal_phone_number', models.CharField(blank=True, max_length=12)),
                ('ordering_phone_number', models.CharField(blank=True, max_length=12)),
                ('accounting_phone_number', models.CharField(blank=True, max_length=12)),
                ('principal_email', models.EmailField(blank=True, max_length=50)),
                ('ordering_email', models.EmailField(blank=True, max_length=50)),
                ('cc_sales_email', models.EmailField(blank=True, max_length=50)),
                ('delivers_monday', models.BooleanField(default=True)),
                ('delivers_tuesday', models.BooleanField(default=True)),
                ('delivers_wednesday', models.BooleanField(default=True)),
                ('delivers_thursday', models.BooleanField(default=True)),
                ('delivers_friday', models.BooleanField(default=True)),
                ('delivers_saturday', models.BooleanField(default=True)),
                ('delivers_sunday', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='FournisseurCategory',
            fields=[
                ('name', models.CharField(max_length=120, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='FournisseurSpecialty',
            fields=[
                ('name', models.CharField(max_length=120, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True)),
                ('illustration', models.FileField(blank=True, upload_to='ingredients/')),
                ('conversion_to_kilo', models.DecimalField(blank=True, decimal_places=7, default=1, max_digits=12, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('unit', models.CharField(blank=True, default='kilogramme', max_length=100)),
                ('is_in_season_january', models.BooleanField(default=False)),
                ('is_in_season_february', models.BooleanField(default=False)),
                ('is_in_season_march', models.BooleanField(default=False)),
                ('is_in_season_april', models.BooleanField(default=False)),
                ('is_in_season_may', models.BooleanField(default=False)),
                ('is_in_season_june', models.BooleanField(default=False)),
                ('is_in_season_july', models.BooleanField(default=False)),
                ('is_in_season_august', models.BooleanField(default=False)),
                ('is_in_season_september', models.BooleanField(default=False)),
                ('is_in_season_october', models.BooleanField(default=False)),
                ('is_in_season_november', models.BooleanField(default=False)),
                ('is_in_season_december', models.BooleanField(default=False)),
                ('allergenes', models.ManyToManyField(blank=True, to='core_routes.allergenes')),
            ],
        ),
        migrations.CreateModel(
            name='IngredientsCategories',
            fields=[
                ('name', models.CharField(max_length=120, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='IngredientsSubCategories',
            fields=[
                ('name', models.CharField(max_length=120, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50)),
                ('date_created', models.DateField(default=datetime.date.today, validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date(2023, 6, 23), message='Date can not be later than today')])),
                ('total_amount_ht', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('total_taxes', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
            ],
        ),
        migrations.CreateModel(
            name='Labels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('unit', models.CharField(blank=True, max_length=75)),
                ('geographic_location', models.CharField(blank=True, max_length=150)),
                ('fournisseur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.fournisseur')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.ingredients')),
                ('labels', models.ManyToManyField(blank=True, to='core_routes.labels')),
            ],
        ),
        migrations.CreateModel(
            name='Recette',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('unit', models.CharField(max_length=100, null=True)),
                ('last_selling_price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('duration', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('last_modification', models.DateField(default=datetime.date.today, validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date(2023, 6, 23), message='Date can not be later than today')])),
                ('selected_for_menu', models.BooleanField(default=False)),
                ('selected_for_next_menu', models.BooleanField(default=False)),
                ('coefficient', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('tva', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(limit_value=100), django.core.validators.MaxValueValidator(limit_value=0)])),
                ('season_start', models.CharField(blank=True, choices=[('Janvier', 'Janvier'), ('Février', 'Fevrier'), ('Mars', 'Mars'), ('Avril', 'Avril'), ('Mai', 'Mai'), ('Juin', 'Juin'), ('Juillet', 'Juillet'), ('Août', 'Aout'), ('Septembre', 'Septembre'), ('Octobre', 'Octobre'), ('Novembre', 'Novembre'), ('Décembre', 'Decembre')], max_length=100, null=True)),
                ('season_end', models.CharField(blank=True, choices=[('Janvier', 'Janvier'), ('Février', 'Fevrier'), ('Mars', 'Mars'), ('Avril', 'Avril'), ('Mai', 'Mai'), ('Juin', 'Juin'), ('Juillet', 'Juillet'), ('Août', 'Aout'), ('Septembre', 'Septembre'), ('Octobre', 'Octobre'), ('Novembre', 'Novembre'), ('Décembre', 'Decembre')], max_length=100, null=True)),
                ('temperature', models.IntegerField(blank=True, null=True)),
                ('sous_vide_pression', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('sous_vide_soudure', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('is_to_modify', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecetteCategory',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='RecetteGenre',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='RecetteTaste',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='SousRecette',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(max_length=100)),
                ('quantity', models.DecimalField(decimal_places=5, default=1, max_digits=12)),
                ('note', models.CharField(blank=True, max_length=250)),
                ('recette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.recette')),
                ('sous_recette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sous_recette', to='core_routes.recette')),
            ],
        ),
        migrations.CreateModel(
            name='RecetteSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('name', models.CharField(max_length=200)),
                ('recette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.recette')),
            ],
        ),
        migrations.CreateModel(
            name='RecetteProgressionElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('text', models.TextField()),
                ('section', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('recette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.recette')),
            ],
        ),
        migrations.CreateModel(
            name='RecetteIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=5, max_digits=12)),
                ('unit', models.CharField(default='kilogramme', max_length=100)),
                ('note', models.CharField(blank=True, max_length=250)),
                ('section', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.ingredients')),
                ('recette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.recette')),
            ],
        ),
        migrations.AddField(
            model_name='recette',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_routes.recettecategory'),
        ),
        migrations.AddField(
            model_name='recette',
            name='genres',
            field=models.ManyToManyField(blank=True, to='core_routes.recettegenre'),
        ),
        migrations.AddField(
            model_name='recette',
            name='tastes',
            field=models.ManyToManyField(blank=True, to='core_routes.recettetaste'),
        ),
        migrations.CreateModel(
            name='ProduitPriceTracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateField(default=datetime.date.today, validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date(2023, 6, 23), message='Date can not be later than today')])),
                ('kilogramme_price', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.produit')),
            ],
        ),
        migrations.CreateModel(
            name='ProduitBack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateField(default=datetime.date.today, validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date(2023, 6, 23), message='Date can not be later than today')])),
                ('original_information_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.produit')),
            ],
        ),
        migrations.AddField(
            model_name='ingredients',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_routes.ingredientscategories'),
        ),
        migrations.AddField(
            model_name='ingredients',
            name='labels',
            field=models.ManyToManyField(blank=True, to='core_routes.labels'),
        ),
        migrations.AddField(
            model_name='ingredients',
            name='sous_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_routes.ingredientssubcategories'),
        ),
        migrations.CreateModel(
            name='FournisseurBack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateField(default=datetime.date.today, validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date(2023, 6, 23), message='Date can not be later than today')])),
                ('original_information_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.fournisseur')),
            ],
        ),
        migrations.AddField(
            model_name='fournisseur',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.fournisseurcategory'),
        ),
        migrations.AddField(
            model_name='fournisseur',
            name='specialty',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core_routes.fournisseurspecialty'),
        ),
        migrations.CreateModel(
            name='Conversions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(default='kilogramme', max_length=100)),
                ('conversion_to_kilo', models.DecimalField(decimal_places=7, default=1, max_digits=14, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.ingredients')),
            ],
        ),
        migrations.CreateModel(
            name='CommandeItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(max_length=100)),
                ('unit_quantity', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('pending_avoir', models.BooleanField(default=False)),
                ('kilogramme_price', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.produit')),
            ],
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimated_ht_total_cost', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('status', models.CharField(choices=[('WAITING_INVOICE', 'Waiting Invoice'), ('WAITING_DELIVERY', 'Waiting Delivery'), ('WAITING_AVOIR', 'Waiting Avoir'), ('AVOIR_RECEIVED_WAITING_INVOICE', 'Avoir Received Waiting Invoice'), ('CLOSED', 'Closed')], default='WAITING_DELIVERY', max_length=100)),
                ('date_created', models.DateField(default=datetime.date.today, validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date(2023, 6, 23), message='Date can not be later than today')])),
                ('month', models.CharField(max_length=100)),
                ('commande_number', models.CharField(max_length=6, unique=True)),
                ('expected_delivery_date', models.DateField(blank=True, default=None, null=True, validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date(2023, 6, 23), message='Date can not be later than today')])),
                ('concerned_with_avoir', models.BooleanField(default=False)),
                ('ordering_mean', models.CharField(choices=[('Commandée par mail', 'Email'), ('Commandée au téléphone', 'Phone'), ('Commandée en physique', 'In Person'), ('Opérée en sortie de caisse', 'Cash Out')], max_length=100)),
                ('avoir', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_routes.avoir')),
                ('bon_livraison', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_routes.bonlivraison')),
                ('fournisseur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.fournisseur')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_routes.invoice')),
                ('items', models.ManyToManyField(to='core_routes.commandeitem')),
            ],
        ),
        migrations.CreateModel(
            name='AvoirItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_demanded', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('reason', models.CharField(max_length=250)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.commandeitem')),
            ],
        ),
        migrations.AddField(
            model_name='avoir',
            name='items',
            field=models.ManyToManyField(to='core_routes.avoiritem'),
        ),
        migrations.AddConstraint(
            model_name='sousrecette',
            constraint=models.CheckConstraint(check=models.Q(('recette', models.F('sous_recette')), _negated=True), name='can_not_add_itself'),
        ),
    ]
