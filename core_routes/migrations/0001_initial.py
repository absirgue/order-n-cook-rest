# Generated by Django 4.1.7 on 2023-04-23 14:52

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergenes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True)),
                ('illustration', models.FileField(blank=True, upload_to='ingredients/')),
                ('conversion_to_kilo', models.DecimalField(blank=True, decimal_places=7, default=1, max_digits=12, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('unit', models.CharField(blank=True, default='kilogramme', max_length=100)),
                ('is_in_season_january', models.BooleanField()),
                ('is_in_season_february', models.BooleanField()),
                ('is_in_season_march', models.BooleanField()),
                ('is_in_season_april', models.BooleanField()),
                ('is_in_season_may', models.BooleanField()),
                ('is_in_season_june', models.BooleanField()),
                ('is_in_season_july', models.BooleanField()),
                ('is_in_season_august', models.BooleanField()),
                ('is_in_season_september', models.BooleanField()),
                ('is_in_season_october', models.BooleanField()),
                ('is_in_season_november', models.BooleanField()),
                ('is_in_season_december', models.BooleanField()),
                ('allergenes', models.ManyToManyField(blank=True, to='core_routes.allergenes')),
            ],
        ),
        migrations.CreateModel(
            name='IngredientsCategories',
            fields=[
                ('name', models.CharField(max_length=120, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='IngredientsSubCategories',
            fields=[
                ('name', models.CharField(max_length=120, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Labels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Recette',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('quantity', models.IntegerField()),
                ('unit', models.CharField(choices=[('personne', 'Personne'), ('gramme', 'Gramme'), ('kilorgamme', 'Kilogramme'), ('littre', 'Littre'), ('centilittre', 'Centilittre')], default='personne', max_length=100)),
                ('duration', models.IntegerField(validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('last_modification', models.DateField(default=datetime.date.today, validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date(2023, 4, 23), message='Date can not be later than today')])),
                ('selected_for_menu', models.BooleanField(default=False)),
                ('selected_for_next_menu', models.BooleanField(default=False)),
                ('coefficient', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('tva', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('season_start', models.CharField(choices=[('janvier', 'Janvier'), ('février', 'Fevrier'), ('mars', 'Mars'), ('avril', 'Avril'), ('mai', 'Mai'), ('juin', 'Juin'), ('juillet', 'Juillet'), ('août', 'Aout'), ('septembre', 'Septembre'), ('octobre', 'Octobre'), ('novembre', 'Novembre'), ('décembre', 'Decembre')], max_length=100)),
                ('season_end', models.CharField(choices=[('janvier', 'Janvier'), ('février', 'Fevrier'), ('mars', 'Mars'), ('avril', 'Avril'), ('mai', 'Mai'), ('juin', 'Juin'), ('juillet', 'Juillet'), ('août', 'Aout'), ('septembre', 'Septembre'), ('octobre', 'Octobre'), ('novembre', 'Novembre'), ('décembre', 'Decembre')], max_length=100)),
                ('temperature', models.IntegerField()),
                ('sous_vide_pression', models.DecimalField(decimal_places=2, max_digits=4)),
                ('sous_vide_soudure', models.DecimalField(decimal_places=2, max_digits=4)),
                ('is_to_modify', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RecetteCategory',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='RecetteGenre',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='RecetteTaste',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='SousRecette',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(choices=[('gramme', 'Gramme'), ('kilogramme', 'Kilogramme'), ('centilittre', 'Centilittre'), ('littre', 'Littre'), ('unité', 'Unite'), ('table_spoon', 'Cuillere A Soupe'), ('tea_spoon', 'Cuillere A Cafe'), ('cup', 'Cup')], default='kilogramme', max_length=100)),
                ('quantity_in_kilogramme', models.DecimalField(decimal_places=7, default=1, max_digits=12)),
                ('quantity', models.DecimalField(decimal_places=7, default=1, max_digits=12)),
                ('recette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.recette')),
                ('sous_recette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sous_recette', to='core_routes.recette')),
            ],
        ),
        migrations.CreateModel(
            name='RecetteSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('name', models.CharField(max_length=200)),
                ('recette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.recette')),
            ],
        ),
        migrations.CreateModel(
            name='RecetteProgressionElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('text', models.TextField()),
                ('section', models.IntegerField(validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('recette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.recette')),
            ],
        ),
        migrations.CreateModel(
            name='RecetteIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('unit', models.CharField(choices=[('gramme', 'Gramme'), ('kilogramme', 'Kilogramme'), ('centilittre', 'Centilittre'), ('littre', 'Littre'), ('unité', 'Unite'), ('table_spoon', 'Cuillere A Soupe'), ('tea_spoon', 'Cuillere A Cafe'), ('cup', 'Cup')], default='kilogramme', max_length=100)),
                ('note', models.CharField(blank=True, max_length=250)),
                ('section', models.IntegerField(validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.ingredients')),
                ('recette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.recette')),
            ],
        ),
        migrations.AddField(
            model_name='recette',
            name='categories',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_routes.recettecategory'),
        ),
        migrations.AddField(
            model_name='recette',
            name='genres',
            field=models.ManyToManyField(blank=True, to='core_routes.recettegenre'),
        ),
        migrations.AddField(
            model_name='recette',
            name='tastes',
            field=models.ManyToManyField(blank=True, to='core_routes.recettetaste'),
        ),
        migrations.AddField(
            model_name='ingredients',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_routes.ingredientscategories'),
        ),
        migrations.AddField(
            model_name='ingredients',
            name='labels',
            field=models.ManyToManyField(blank=True, to='core_routes.labels'),
        ),
        migrations.AddField(
            model_name='ingredients',
            name='sous_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_routes.ingredientssubcategories'),
        ),
        migrations.CreateModel(
            name='Conversions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(default='kilogramme', max_length=100)),
                ('conversion_to_kilo', models.DecimalField(decimal_places=7, default=1, max_digits=14, validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_routes.ingredients')),
            ],
        ),
    ]
